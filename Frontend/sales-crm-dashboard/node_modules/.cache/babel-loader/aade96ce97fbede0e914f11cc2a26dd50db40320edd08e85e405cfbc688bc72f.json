{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\capstone\\\\Frontend\\\\sales-crm-dashboard\\\\src\\\\pages\\\\crm\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\n// src/pages/crm/Dashboard.tsx\nimport React, { useState, useEffect } from 'react';\nimport DashboardLayout from '../../layouts/crm/DashboardLayout';\nimport Widget from '../../components/crm/Widget';\nimport styles from '../../styles/crm/dashboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setTimeout(() => {\n        setData({\n          activeDeals: 50000,\n          // Monetary value\n          avgDealValue: 7000,\n          actualRevenue: 500000,\n          revenueByMonth: {\n            labels: ['Jan', 'Feb', 'Mar'],\n            datasets: [{\n              data: [120000, 150000, 130000],\n              label: 'Revenue'\n            }]\n          },\n          dealStatusDistribution: {\n            labels: ['Won', 'Working', 'Discovery', 'Proposal', 'New'],\n            datasets: [{\n              data: [15, 20, 10, 5, 5],\n              label: 'Status'\n            }]\n          },\n          topDeals: ['Deal 1 - $20k', 'Deal 2 - $18k', 'Deal 3 - $15k'],\n          pipelineConversion: {\n            labels: ['New', 'Discovery', 'Proposal', 'Negotiation', 'Won'],\n            datasets: [{\n              data: [30, 25, 20, 15, 10],\n              label: 'Conversion'\n            }]\n          },\n          forecastedRevenueByMonth: {\n            labels: ['Apr', 'May', 'Jun'],\n            datasets: [{\n              data: [140000, 160000, 170000],\n              label: 'Forecasted Revenue'\n            }]\n          },\n          forecastedRevenueByStage: {\n            labels: ['Discovery', 'Proposal', 'Negotiation', 'Won'],\n            datasets: [{\n              data: [25000, 50000, 100000, 125000],\n              label: 'Forecasted Revenue by Stage'\n            }]\n          },\n          dealsProgressByMonth: {\n            labels: ['Jan', 'Feb', 'Mar'],\n            datasets: [{\n              data: [1, 0, 0],\n              label: 'New Deals'\n            }, {\n              data: [1, 1, 0],\n              label: 'Won Deals'\n            }, {\n              data: [0, 0, 1],\n              label: 'Working Deals'\n            }]\n          }\n        });\n      }, 0); // Simulate network delay\n    };\n    fetchData();\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dashboardWidgets,\n      children: [/*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Active Deals\",\n        content: `$${data.activeDeals.toLocaleString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Average Value of Won Deals\",\n        content: `$${data.avgDealValue}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Actual Revenue\",\n        content: `$${data.actualRevenue}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Revenue by Month\",\n        chartData: data.revenueByMonth,\n        chartType: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Deal Status Distribution\",\n        chartData: data.dealStatusDistribution,\n        chartType: \"pie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Top Deals\",\n        content: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: data.topDeals.map((deal, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: deal\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 84\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Pipeline Conversion\",\n        chartData: data.pipelineConversion,\n        chartType: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Forecasted Revenue by Month\",\n        chartData: data.forecastedRevenueByMonth,\n        chartType: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Forecasted Revenue by Stage\",\n        chartData: data.forecastedRevenueByStage,\n        chartType: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Widget, {\n        title: \"Deals Progress by Month\",\n        chartData: data.dealsProgressByMonth,\n        chartType: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","DashboardLayout","Widget","styles","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","fetchData","setTimeout","activeDeals","avgDealValue","actualRevenue","revenueByMonth","labels","datasets","label","dealStatusDistribution","topDeals","pipelineConversion","forecastedRevenueByMonth","forecastedRevenueByStage","dealsProgressByMonth","children","fileName","_jsxFileName","lineNumber","columnNumber","className","dashboardWidgets","title","content","toLocaleString","chartData","chartType","map","deal","index","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/capstone/Frontend/sales-crm-dashboard/src/pages/crm/Dashboard.tsx"],"sourcesContent":["// src/pages/crm/Dashboard.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport DashboardLayout from '../../layouts/crm/DashboardLayout';\r\nimport Widget from '../../components/crm/Widget';\r\nimport styles from '../../styles/crm/dashboard.module.css';\r\n\r\ninterface DashboardData {\r\n  activeDeals: number;\r\n  avgDealValue: number;\r\n  actualRevenue: number;\r\n  revenueByMonth: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  dealStatusDistribution: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  topDeals: string[];\r\n  pipelineConversion: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  forecastedRevenueByMonth: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  forecastedRevenueByStage: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  dealsProgressByMonth: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [data, setData] = useState<DashboardData | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setTimeout(() => {\r\n        setData({\r\n          activeDeals: 50000, // Monetary value\r\n          avgDealValue: 7000,\r\n          actualRevenue: 500000,\r\n          revenueByMonth: { labels: ['Jan', 'Feb', 'Mar'], datasets: [{ data: [120000, 150000, 130000], label: 'Revenue' }] },\r\n          dealStatusDistribution: { labels: ['Won', 'Working', 'Discovery', 'Proposal', 'New'], datasets: [{ data: [15, 20, 10, 5, 5], label: 'Status' }] },\r\n          topDeals: ['Deal 1 - $20k', 'Deal 2 - $18k', 'Deal 3 - $15k'],\r\n          pipelineConversion: { labels: ['New', 'Discovery', 'Proposal', 'Negotiation', 'Won'], datasets: [{ data: [30, 25, 20, 15, 10], label: 'Conversion' }] },\r\n          forecastedRevenueByMonth: { labels: ['Apr', 'May', 'Jun'], datasets: [{ data: [140000, 160000, 170000], label: 'Forecasted Revenue' }] },\r\n          forecastedRevenueByStage: { labels: ['Discovery', 'Proposal', 'Negotiation', 'Won'], datasets: [{ data: [25000, 50000, 100000, 125000], label: 'Forecasted Revenue by Stage' }] },\r\n          dealsProgressByMonth: { \r\n            labels: ['Jan', 'Feb', 'Mar'], \r\n            datasets: [\r\n              { data: [1, 0, 0], label: 'New Deals' },\r\n              { data: [1, 1, 0], label: 'Won Deals' },\r\n              { data: [0, 0, 1], label: 'Working Deals' }\r\n            ]\r\n          },\r\n        });\r\n      }, 0); // Simulate network delay\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className={styles.dashboardWidgets}>\r\n        <Widget title=\"Active Deals\" content={`$${data.activeDeals.toLocaleString()}`} />\r\n        <Widget title=\"Average Value of Won Deals\" content={`$${data.avgDealValue}`} />\r\n        <Widget title=\"Actual Revenue\" content={`$${data.actualRevenue}`} />\r\n        <Widget title=\"Revenue by Month\" chartData={data.revenueByMonth} chartType=\"bar\" />\r\n        <Widget title=\"Deal Status Distribution\" chartData={data.dealStatusDistribution} chartType=\"pie\" />\r\n        <Widget title=\"Top Deals\" content={<ul>{data.topDeals.map((deal, index) => <li key={index}>{deal}</li>)}</ul>} />\r\n        <Widget title=\"Pipeline Conversion\" chartData={data.pipelineConversion} chartType=\"bar\" />\r\n        <Widget title=\"Forecasted Revenue by Month\" chartData={data.forecastedRevenueByMonth} chartType=\"bar\" />\r\n        <Widget title=\"Forecasted Revenue by Stage\" chartData={data.forecastedRevenueByStage} chartType=\"bar\" />\r\n        <Widget title=\"Deals Progress by Month\" chartData={data.dealsProgressByMonth} chartType=\"bar\" />\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}