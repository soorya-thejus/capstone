{"ast":null,"code":"// src/services/AccountService.ts\nimport axios from 'axios';\n// Make sure this matches your type location\n\n// Base URL for API\nconst API_BASE_URL = 'http://localhost:5003/api/accounts'; // Update the port and path as needed\ngetAllAccounts: async orgId => {\n  const response = await axios.get(`${API_URL}?org_id=${orgId}`);\n  return response.data;\n};\n// Create a new account\nexport const createAccount = async accountData => {\n  const response = await axios.post(`${API_BASE_URL}`, accountData);\n  return response.data;\n};\n\n// Get a single account by ID\nexport const getAccount = async _id => {\n  const response = await axios.get(`${API_BASE_URL}/${_id}`);\n  return response.data;\n};\n\n// Get all accounts\nexport const getAllAccounts = async () => {\n  const response = await axios.get(`${API_BASE_URL}`);\n  return response.data; // Make sure this returns an array of accounts with string IDs\n};\n\n// Update an account by ID\nexport const updateAccount = async (_id, accountData) => {\n  const response = await axios.put(`${API_BASE_URL}/${_id}`, accountData);\n  return response.data;\n};\n\n// Delete an account by ID\nexport const deleteAccount = async _id => {\n  const response = await axios.delete(`${API_BASE_URL}/${_id}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAllAccounts","orgId","response","get","API_URL","data","createAccount","accountData","post","getAccount","_id","updateAccount","put","deleteAccount","delete"],"sources":["C:/Users/Administrator/Desktop/capstone/Frontend/sales-crm-dashboard/src/services/AccountService.ts"],"sourcesContent":["// src/services/AccountService.ts\r\nimport axios from 'axios';\r\nimport { Account } from '../types/crm/Account'; // Make sure this matches your type location\r\n\r\n// Base URL for API\r\nconst API_BASE_URL = 'http://localhost:5003/api/accounts'; // Update the port and path as needed\r\ngetAllAccounts: async (orgId: string) => {\r\n  const response = await axios.get(`${API_URL}?org_id=${orgId}`);\r\n  return response.data;\r\n}\r\n// Create a new account\r\nexport const createAccount = async (accountData: Account) => {\r\n  const response = await axios.post(`${API_BASE_URL}`, accountData);\r\n  return response.data;\r\n};\r\n\r\n// Get a single account by ID\r\nexport const getAccount = async (_id: string) => {\r\n  const response = await axios.get(`${API_BASE_URL}/${_id}`);\r\n  return response.data;\r\n};\r\n\r\n// Get all accounts\r\nexport const getAllAccounts = async () => {\r\n  const response = await axios.get(`${API_BASE_URL}`);\r\n  return response.data; // Make sure this returns an array of accounts with string IDs\r\n};\r\n\r\n// Update an account by ID\r\nexport const updateAccount = async (_id: string, accountData: Account) => {\r\n  const response = await axios.put(`${API_BASE_URL}/${_id}`, accountData);\r\n  return response.data;\r\n};\r\n\r\n// Delete an account by ID\r\nexport const deleteAccount = async (_id: string) => {\r\n  const response = await axios.delete(`${API_BASE_URL}/${_id}`);\r\n  return response.data;\r\n};\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACuB;;AAEhD;AACA,MAAMC,YAAY,GAAG,oCAAoC,CAAC,CAAC;AAC3DC,cAAc,EAAE,MAAOC,KAAa,IAAK;EACvC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGC,OAAO,WAAWH,KAAK,EAAE,CAAC;EAC9D,OAAOC,QAAQ,CAACG,IAAI;AACtB,CAAC;AACD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAoB,IAAK;EAC3D,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,EAAE,EAAEQ,WAAW,CAAC;EACjE,OAAOL,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAOC,GAAW,IAAK;EAC/C,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,IAAIW,GAAG,EAAE,CAAC;EAC1D,OAAOR,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAML,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAME,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,EAAE,CAAC;EACnD,OAAOG,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOD,GAAW,EAAEH,WAAoB,KAAK;EACxE,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,IAAIW,GAAG,EAAE,EAAEH,WAAW,CAAC;EACvE,OAAOL,QAAQ,CAACG,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAOH,GAAW,IAAK;EAClD,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,MAAM,CAAC,GAAGf,YAAY,IAAIW,GAAG,EAAE,CAAC;EAC7D,OAAOR,QAAQ,CAACG,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}