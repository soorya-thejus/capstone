{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\capstone\\\\Frontend\\\\sales-crm-dashboard\\\\src\\\\components\\\\crm\\\\AccountsTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AccountForm from './AccountForm';\nimport * as accountService from '../../services/AccountService';\nimport styles from '../../styles/crm/accountstable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountsTable = ({\n  orgId\n}) => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [isEditing, setEditing] = useState(false);\n\n  // Fetch all accounts on component mount\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const data = await accountService.getAllAccounts(orgId);\n        setAccounts(data);\n      } catch (error) {\n        console.error(\"Error fetching accounts\", error);\n      }\n    };\n    fetchAccounts();\n  }, [orgId]);\n  const handleEditClick = account => {\n    setSelectedAccount(account);\n    setEditing(true);\n  };\n  const handleDeleteClick = async _id => {\n    if (window.confirm(\"Are you sure you want to delete this account?\")) {\n      try {\n        await accountService.deleteAccount(_id);\n        setAccounts(accounts.filter(account => account._id !== _id));\n      } catch (error) {\n        console.error(\"Error deleting account\", error);\n      }\n    }\n  };\n  const handleSaveAccount = async account => {\n    try {\n      if (!account._id) {\n        // Check if _id is not present for new accounts\n        const newAccount = await accountService.createAccount(account);\n        setAccounts([...accounts, newAccount]);\n      } else {\n        const updatedAccount = await accountService.updateAccount(account._id, account);\n        setAccounts(accounts.map(a => a._id === updatedAccount._id ? updatedAccount : a));\n      }\n      setEditing(false);\n      setSelectedAccount(null);\n    } catch (error) {\n      console.error(\"Error saving account\", error);\n    }\n  };\n  const handleCancel = () => {\n    setEditing(false);\n    setSelectedAccount(null);\n  };\n  const handleAddClick = () => {\n    setSelectedAccount({\n      _id: '',\n      account_name: '',\n      priority: 'medium',\n      industry: '',\n      description: '',\n      number_of_employees: 0\n    });\n    setEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tableContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.addButton,\n      onClick: handleAddClick,\n      children: \"Add Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(AccountForm, {\n      account: selectedAccount || {\n        _id: '',\n        account_name: '',\n        priority: 'medium',\n        industry: '',\n        description: '',\n        number_of_employees: 0\n      },\n      onSave: handleSaveAccount,\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Account Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.account_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.number_of_employees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(account),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.deleteButton,\n              onClick: () => handleDeleteClick(account._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, account._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsTable, \"b9RptK5kLpFjbR0Xu4Bc16O8ErM=\");\n_c = AccountsTable;\nexport default AccountsTable;\nvar _c;\n$RefreshReg$(_c, \"AccountsTable\");","map":{"version":3,"names":["React","useState","useEffect","AccountForm","accountService","styles","jsxDEV","_jsxDEV","AccountsTable","orgId","_s","accounts","setAccounts","selectedAccount","setSelectedAccount","isEditing","setEditing","fetchAccounts","data","getAllAccounts","error","console","handleEditClick","account","handleDeleteClick","_id","window","confirm","deleteAccount","filter","handleSaveAccount","newAccount","createAccount","updatedAccount","updateAccount","map","a","handleCancel","handleAddClick","account_name","priority","industry","description","number_of_employees","className","tableContainer","children","addButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onCancel","deleteButton","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/capstone/Frontend/sales-crm-dashboard/src/components/crm/AccountsTable.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Account } from '../../types/crm/Account';\r\nimport AccountForm from './AccountForm';\r\nimport * as accountService from '../../services/AccountService';\r\nimport styles from '../../styles/crm/accountstable.module.css';\r\n\r\ninterface AccountsTableProps {\r\n  orgId: string;\r\n}\r\n\r\nconst AccountsTable: React.FC<AccountsTableProps> = ({ orgId }) => {\r\n  const [accounts, setAccounts] = useState<Account[]>([]);\r\n  const [selectedAccount, setSelectedAccount] = useState<Account | null>(null);\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  // Fetch all accounts on component mount\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const data = await accountService.getAllAccounts(orgId);\r\n        setAccounts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching accounts\", error);\r\n      }\r\n    };\r\n    fetchAccounts();\r\n  }, [orgId]);\r\n\r\n  const handleEditClick = (account: Account) => {\r\n    setSelectedAccount(account);\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleDeleteClick = async (_id: string) => {\r\n    if (window.confirm(\"Are you sure you want to delete this account?\")) {\r\n      try {\r\n        await accountService.deleteAccount(_id);\r\n        setAccounts(accounts.filter(account => account._id !== _id));\r\n      } catch (error) {\r\n        console.error(\"Error deleting account\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveAccount = async (account: Account) => {\r\n    try {\r\n      if (!account._id) { // Check if _id is not present for new accounts\r\n        const newAccount = await accountService.createAccount(account);\r\n        setAccounts([...accounts, newAccount]);\r\n      } else {\r\n        const updatedAccount = await accountService.updateAccount(account._id, account);\r\n        setAccounts(accounts.map(a => (a._id === updatedAccount._id ? updatedAccount : a)));\r\n      }\r\n      setEditing(false);\r\n      setSelectedAccount(null);\r\n    } catch (error) {\r\n      console.error(\"Error saving account\", error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditing(false);\r\n    setSelectedAccount(null);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setSelectedAccount({\r\n      _id: '',\r\n      account_name: '',\r\n      priority: 'medium',\r\n      industry: '',\r\n      description: '',\r\n      number_of_employees: 0,\r\n    });\r\n    setEditing(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.tableContainer}>\r\n      <button\r\n        className={styles.addButton}\r\n        onClick={handleAddClick}\r\n      >\r\n        Add Account\r\n      </button>\r\n      \r\n      {isEditing && (\r\n        <AccountForm\r\n          account={selectedAccount || {\r\n            _id: '',\r\n            account_name: '',\r\n            priority: 'medium',\r\n            industry: '',\r\n            description: '',\r\n            number_of_employees: 0,\r\n          }}\r\n          onSave={handleSaveAccount}\r\n          onCancel={handleCancel}\r\n        />\r\n      )}\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Account Name</th>\r\n            <th>Priority</th>\r\n            <th>Industry</th>\r\n            <th>Description</th>\r\n            <th>Employees</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accounts.map(account => (\r\n            <tr key={account._id}>\r\n              <td>{account.account_name}</td>\r\n              <td>{account.priority}</td>\r\n              <td>{account.industry}</td>\r\n              <td>{account.description}</td>\r\n              <td>{account.number_of_employees}</td>\r\n              <td>\r\n                <button onClick={() => handleEditClick(account)}>Edit</button>\r\n              </td>\r\n              <td>\r\n                <button className={styles.deleteButton} onClick={() => handleDeleteClick(account._id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}