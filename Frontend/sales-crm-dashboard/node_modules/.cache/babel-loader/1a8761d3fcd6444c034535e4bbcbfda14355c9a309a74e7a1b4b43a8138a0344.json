{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\capstone\\\\Frontend\\\\sales-crm-dashboard\\\\src\\\\components\\\\crm\\\\Widget.tsx\";\n// src/components/crm/Widget.tsx\nimport React from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport styles from '../../styles/crm/widget.module.css';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\nconst Widget = ({\n  title,\n  content,\n  chartData,\n  chartType\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.widget,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), chartData && chartType === 'bar' && /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: chartData.labels,\n        datasets: chartData.datasets.map(dataset => ({\n          ...dataset,\n          backgroundColor: dataset.label === 'New Deals' ? 'rgba(75, 192, 192, 0.6)' : dataset.label === 'Won Deals' ? 'rgba(255, 206, 86, 0.6)' : dataset.label === 'Working Deals' ? 'rgba(255, 99, 132, 0.6)' : 'rgba(153, 102, 255, 0.6)' // Default color\n        }))\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          title: {\n            display: true,\n            text: 'Deals Progress by Month'\n          }\n        },\n        scales: {\n          y: {\n            stacked: true,\n            // Enable stacking\n            min: 0,\n            // Minimum value on Y-axis\n            ticks: {\n              callback: value => {\n                // Check if value is a number before comparing\n                if (typeof value === 'number' && value >= 0) {\n                  return value;\n                }\n                return null; // Return null for non-numeric values\n              }\n            }\n          },\n          x: {\n            stacked: true // Enable stacking\n          }\n        }\n      },\n      style: {\n        height: '300px'\n      } // Use CSS to control height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), chartData && chartType === 'pie' && /*#__PURE__*/_jsxDEV(Pie, {\n      data: {\n        labels: chartData.labels,\n        datasets: chartData.datasets.map(dataset => ({\n          ...dataset,\n          backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(255, 99, 132, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(54, 162, 235, 0.6)'] // Example colors\n        }))\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Widget;\nexport default Widget;\nvar _c;\n$RefreshReg$(_c, \"Widget\");","map":{"version":3,"names":["React","Bar","Pie","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","styles","jsxDEV","_jsxDEV","register","Widget","title","content","chartData","chartType","className","widget","children","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","map","dataset","backgroundColor","label","options","responsive","plugins","legend","position","display","text","scales","y","stacked","min","ticks","callback","value","x","style","height","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/capstone/Frontend/sales-crm-dashboard/src/components/crm/Widget.tsx"],"sourcesContent":["// src/components/crm/Widget.tsx\r\nimport React from 'react';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from 'chart.js';\r\nimport styles from '../../styles/crm/widget.module.css';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\r\n\r\ninterface WidgetProps {\r\n  title: string;\r\n  content?: string | JSX.Element; // Adjust to accept JSX\r\n  chartData?: { labels: string[]; datasets: { data: number[]; label: string }[] };\r\n  chartType?: 'bar' | 'pie';\r\n}\r\n\r\nconst Widget: React.FC<WidgetProps> = ({ title, content, chartData, chartType }) => {\r\n  return (\r\n    <div className={styles.widget}>\r\n      <h3>{title}</h3>\r\n      {content && <div>{content}</div>}\r\n      {chartData && chartType === 'bar' && (\r\n        <Bar\r\n          data={{\r\n            labels: chartData.labels,\r\n            datasets: chartData.datasets.map(dataset => ({\r\n              ...dataset,\r\n              backgroundColor: dataset.label === 'New Deals' ? 'rgba(75, 192, 192, 0.6)' :\r\n                              dataset.label === 'Won Deals' ? 'rgba(255, 206, 86, 0.6)' :\r\n                              dataset.label === 'Working Deals' ? 'rgba(255, 99, 132, 0.6)' :\r\n                              'rgba(153, 102, 255, 0.6)', // Default color\r\n            })),\r\n          }}\r\n          options={{\r\n            responsive: true,\r\n            plugins: {\r\n              legend: { position: 'top' },\r\n              title: { display: true, text: 'Deals Progress by Month' },\r\n            },\r\n            scales: {\r\n              y: {\r\n                stacked: true, // Enable stacking\r\n                min: 0, // Minimum value on Y-axis\r\n                ticks: {\r\n                  callback: (value) => {\r\n                    // Check if value is a number before comparing\r\n                    if (typeof value === 'number' && value >= 0) {\r\n                      return value;\r\n                    }\r\n                    return null; // Return null for non-numeric values\r\n                  },\r\n                },\r\n              },\r\n              x: {\r\n                stacked: true, // Enable stacking\r\n              },\r\n            },\r\n          }}\r\n          style={{ height: '300px' }} // Use CSS to control height\r\n        />\r\n      )}\r\n      {chartData && chartType === 'pie' && (\r\n        <Pie\r\n          data={{\r\n            labels: chartData.labels,\r\n            datasets: chartData.datasets.map((dataset) => ({\r\n              ...dataset,\r\n              backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 206, 86, 0.6)', \r\n                'rgba(255, 99, 132, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(54, 162, 235, 0.6)'], // Example colors\r\n            })),\r\n          }}\r\n          options={{ responsive: true, plugins: { legend: { position: 'top' } } }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}